package executable;

import processing.core.*;

import org.gephi.graph.api.DirectedGraph;
import org.gephi.graph.api.GraphController;
import org.gephi.graph.api.GraphModel;
import org.gephi.layout.plugin.force.StepDisplacement;
import org.gephi.layout.plugin.force.yifanHu.*;
import org.openide.util.Lookup;

public class Executable extends PApplet {
	Logica app;
	boolean clockwise = true;

	public void setup() {
		size(1200,600);
		//size(1500, 600);
		app = new Logica(this);
		textSize(10);
		textAlign(CENTER);
		// noLoop();
		ellipseMode(CENTER);
	}

	public void draw() {
		background(0);
		 app.show(this);
	}

	
	public void keyPressed(){
		if (key=='r'){
			clockwise = !clockwise;
		}
	}
	
	GraphModel graphModel = Lookup.getDefault().lookup(GraphController.class).getGraphModel();
	DirectedGraph graph = graphModel.getDirectedGraph();

	System.out.println ("Nodes: " + graph.getNodeCount());
	System.out.println ("Edges: " + graph.getEdgeCount());
	
	//Run YifanHuLayout for 100 passes - The layout always takes the current visible view
	YifanHuLayout layout = new YifanHuLayout(null, new StepDisplacement(1f));
	layout.setGraphModel(graphModel);
	layout.initAlgo();
	layout.resetPropertiesValues();
	layout.setOptimalDistance(200f);
}
