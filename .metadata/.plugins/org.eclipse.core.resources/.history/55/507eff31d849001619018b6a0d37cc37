package executable;

import java.awt.Dimension;
import java.util.ArrayList;

import edu.uci.ics.jung.graph.DirectedSparseMultigraph;
import graphElements.Edge;
import graphElements.Node;
import utilities.visualArrangements.Container;
import utilities.visualArrangements.RootContainer;
import utilities.visualArrangements.SubContainer;
import visualElements.VCommunity;
import processing.core.*;

public class Logica {
	// Interaction elements
	public PVector mousePos;

	// Graph Elements
	private GraphLoader rootGraph;
	private ArrayList<DirectedSparseMultigraph<Node, Edge>> subGraphs;

	// Visual Elements
	private ArrayList<SubContainer> containers;
	//private RootContainer mainCommunity;
	//private SubContainer subCommunityAsia,subCommunityEuropa;
	private VCommunity vMainCommunity, vAsia, vEuropa;
	

	public Logica(PApplet app) {
		String XML_FILE = "../data/graphs/Risk.graphml";
		
		// ***** ROOT GRAPH*****
		rootGraph = new GraphLoader(XML_FILE);
		//Container of rootGraph
		containers = new ArrayList<SubContainer>();
		RootContainer mainCommunity = new RootContainer(app, rootGraph.jungGraph, RootContainer.CIRCULAR, new Dimension(250, 250));
		mainCommunity.setName("World");
		// Root Community
		vMainCommunity = new VCommunity(app, new Node(0), mainCommunity);
		
		// ***** SUBGRAPHS & CONTAINERS  *****
		subGraphs = new ArrayList<DirectedSparseMultigraph<Node, Edge>>();
		for(String communityName : rootGraph.getCommunityNames()){
			DirectedSparseMultigraph<Node, Edge> graphTemp = GraphLoader.filterByCommunity(rootGraph.jungGraph,communityName);
			SubContainer containerTemp = new SubContainer(graphTemp,mainCommunity,Container.SPRING,new Dimension(180, 180));
			containerTemp.setName(communityName);
			subGraphs.add(graphTemp);
			containers.add(containerTemp);
		}



	

		// ***** VISUALIZERS *****

		// SubCommunities
		vAsia = new VCommunity(app, new Node(0), subCommunityAsia);
		vEuropa = new VCommunity(app, new Node(0), subCommunityEuropa);
		
	}

	public void show(PApplet app) {
		
		vMainCommunity.show();
		vAsia.show();
		vEuropa.show();
	}
}
