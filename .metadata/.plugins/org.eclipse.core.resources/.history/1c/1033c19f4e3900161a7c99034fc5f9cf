package utilities.containers;

import java.util.ArrayList;
import java.util.Iterator;

import processing.core.PApplet;
import processing.core.PVector;
import visualElements.VEdge;
import visualElements.VNode;
import visualElements.interactive.VisualAtom;

public class LinearArrangement extends Arrangement {

	public LinearArrangement(PApplet app) {
		super(app);
	}

	/**
	 * Assigns coordinates to each VisualAtom on an horizontal axis
	 */
	public void linearLayout(PVector orig, PVector end) {
		int count = 0;
		float dist = orig.dist(end);
		float xStep = (float) dist / (visualElements.size());

		// Organize nodes on a line
		Iterator<VisualAtom> itr = visualElements.iterator();
		while (itr.hasNext()) {
			VNode tmp = (VNode) itr.next();
			tmp.setX(orig.x + xStep + (xStep * count));
			tmp.setY(orig.y);
			count++;
		}
	}

	/**
	 * Assigns coordinates to each VisualAtom on an horizontal axis, Y=0
	 */
	public void linearLayout() {
		PVector orig = new PVector(30, 0);
		PVector end = new PVector(app.width - 30, 0);
		int count = 0;
		float dist = orig.dist(end);
		float xStep = (float) dist / (visualElements.size());

		// Organize nodes on a line
		Iterator<VisualAtom> itr = visualElements.iterator();
		while (itr.hasNext()) {
			VNode tmp = (VNode) itr.next();
			tmp.setX(orig.x + xStep + (xStep * count));
			tmp.setY(orig.y);
			count++;
		}
	}

	@Override
	public void update() {
		// TODO Auto-generated method stub

	}
}
